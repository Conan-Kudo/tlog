configuration
    read with libjson-c
    max I/O data size per message
    max message latency
    log sink
    default shell
environment
    shell
filename
    shell in command's name?
command line
    can we have any options?

can tlog be used as sudo shell?
    we can allow commands starting with "tlog" only
    assign shell for target user?

publish design document on FreeIPA wiki
focus on client side, wait for the server side
have realtime playback as the first demo milestone

Ask Jakub and Martin for review once logging is working.

Retrieve character encoding and convert to UTF-8 in JSON.
For the time being check encoding and abort with a message saying only UTF-8
is supported.

Add a start message with the terminal type.

Add message versions

Disable assertions in non-debug build.

Consider removing tlog_rc type and using bool instead.

Refactor tlog.c

Add throttling.

Provide comprehensive object descriptions in header files.

Implement source. Implement reader interface and some readers.

Align "case" with "switch" everywhere.

Use include <...> instead of include "..." wherever possible.

Make all if statements use braces, even single-line ones.

Consider pluggable memory allocation when library grows bigger and there is a
potential for outside users.

Consider building release code with NDEBUG.

Consider merging all possible error codes into single space and module,
possibly with the addition of interface to register new ones.
This will make handling inherited and tunneled error codes easier.
Especially for the case of objects which failed to create.
